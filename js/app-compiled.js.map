{"version":3,"sources":["app.js"],"names":[],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,EAAE,YAAI;;AAEF;AACA,QAAI,SAAU,SAAS,cAAT,CAAwB,QAAxB,CAAd;AACA,QAAI,WAAW,SAAS,cAAT,CAAwB,QAAxB,CAAf;AACA,QAAI,oBAAoB,SAAS,cAAT,CAAwB,iBAAxB,CAAxB;AACA,QAAI,QAAQ,SAAS,cAAT,CAAwB,WAAxB,CAAZ;AACA,QAAI,gBAAgB,SAAS,cAAT,CAAwB,iBAAxB,CAApB;AACA,QAAM,kBAAkB,SAAS,cAAT,CAAwB,iBAAxB,CAAxB;AACA,QAAI,mBAAmB,SAAS,cAAT,CAAwB,kBAAxB,CAAvB;;AAGA;AACA;AACA,WAAO,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACnC,YAAI,OAAO,MAAM,KAAjB;AACA,eAAO,QAAQ,IAAR,CAAP,GAAuB,QAAQ,GAAR,CAAY,eAAZ,CAAvB;AAEH,KAJD;;AAMA;AACA;AACA,UAAM,gBAAN,CAAuB,OAAvB,EAAgC,aAAI;AAChC,YAAG,EAAE,OAAF,KAAc,EAAjB,EAAoB;AAChB,gBAAI,OAAO,MAAM,KAAjB;AACA,mBAAO,QAAQ,IAAR,EAAc,SAAd,CAAP,GAAkC,QAAQ,GAAR,CAAY,eAAZ,CAAlC;AAEH;AACJ,KAND;;AAQA;AACA;AACA,QAAM,qBAAqB,SAArB,kBAAqB,IAAI;AAC3B,YAAI,OAAS,EAAE,MAAF,CAAS,UAAT,CAAoB,UAAjC;AACA,YAAG,KAAK,YAAL,CAAkB,YAAlB,CAAH,EAAmC;AAC/B,iBAAK,eAAL,CAAqB,YAArB;AACA,iBAAK,SAAL,CAAe,MAAf,CAAsB,eAAtB;AACA,sCAA0B,QAA1B;AACH,SAJD,MAIM;AACF,yBAAa,IAAb;AACH;AACJ,KATD;;AAWA;AACA;AACA,QAAM,eAAe,SAAf,YAAe,OAAQ;AACzB,aAAK,YAAL,CAAkB,YAAlB,EAA+B,UAA/B;AACA,aAAK,SAAL,CAAe,GAAf,CAAmB,eAAnB;AACA,YAAI,SAAS,KAAK,UAAlB;AACA,aAAK,UAAL,CAAgB,YAAhB,CAA6B,IAA7B,EAAkC,OAAO,UAAP,CAAkB,CAAlB,CAAlC;AACA;AACH,KAND;;AAQA;AACA;AACA,QAAM,4BAA4B,SAA5B,yBAA4B,GAAM;AACpC,aAAI,IAAI,IAAI,CAAZ,EAAgB,IAAI,SAAS,QAAT,CAAkB,MAAtC,EAA8C,GAA9C,EAAmD;AAC/C,gBAAG,SAAS,QAAT,CAAkB,CAAlB,EAAqB,YAArB,CAAkC,YAAlC,MAAoD,UAAvD,EAAkE;AAC9D,gCAAgB,KAAhB,CAAsB,OAAtB,GAAgC,cAAhC;AACH;AACJ;AACD;AACA,wBAAgB,gBAAhB,CAAiC,OAAjC,EAAyC,wBAAzC;AACH,KARD;;AAUA;AACA,QAAM,2BAA2B,SAA3B,wBAA2B,GAAM;AACnC,aAAI,IAAI,IAAI,CAAZ,EAAgB,IAAI,SAAS,QAAT,CAAkB,MAAtC,EAA8C,GAA9C,EAAmD;AAC/C,gBAAG,SAAS,QAAT,CAAkB,CAAlB,EAAqB,YAArB,CAAkC,YAAlC,MAAoD,IAAvD,EAA6D;AACzD,yBAAS,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAA2B,OAA3B,GAAqC,MAArC;AACH;AACJ;;AAED;AACA,wBAAgB,WAAhB,GAA8B,UAA9B;;AAEA;AACA,wBAAgB,gBAAhB,CAAiC,OAAjC,EAAyC,YAAzC;AACH,KAZD;;AAcA;AACA,QAAM,eAAe,SAAf,YAAe,GAAM;AACvB,aAAI,IAAI,IAAI,CAAZ,EAAgB,IAAI,SAAS,QAAT,CAAkB,MAAtC,EAA8C,GAA9C,EAAmD;AAC/C,gBAAG,SAAS,QAAT,CAAkB,CAAlB,EAAqB,YAArB,CAAkC,YAAlC,MAAoD,IAAvD,EAA6D;AACzD,yBAAS,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAA2B,OAA3B,GAAqC,EAArC;AACH;AACJ;AACD;AACA,wBAAgB,WAAhB,GAA8B,YAA9B;;AAEA;AACA,wBAAgB,mBAAhB,CAAoC,OAApC,EAA4C,YAA5C;;AAEA;AACA,wBAAgB,gBAAhB,CAAiC,OAAjC,EAAyC,wBAAzC;AACH,KAdD;;AAgBA;AACA,QAAM,4BAA4B,SAA5B,yBAA4B,CAAC,IAAD,EAAU;;AAExC;AACA,YAAI,QAAQ,CAAZ;;AAEA,aAAI,IAAI,IAAI,CAAZ,EAAgB,IAAI,KAAK,QAAL,CAAc,MAAlC,EAA0C,GAA1C,EAA+C;AAC3C,gBAAG,KAAK,QAAL,CAAc,CAAd,EAAiB,YAAjB,CAA8B,YAA9B,MAAgD,IAAnD,EAAwD;AACpD;AACA,gCAAgB,KAAhB,CAAsB,OAAtB,GAAgC,cAAhC;AACH,aAHD,MAGM;AACF,oBAAG,QAAQ,CAAX,EAAc;AACV,oCAAgB,KAAhB,CAAsB,OAAtB,GAAgC,cAAhC;AACH,iBAFD,MAEM;AACF,oCAAgB,KAAhB,CAAsB,OAAtB,GAAgC,MAAhC;AACH;AACJ;AACJ;AACJ,KAjBD;;AAmBA;AACA,QAAM,aAAa,SAAb,UAAa,IAAK;AACpB,YAAI,OAAO,EAAE,MAAF,CAAS,UAAT,CAAoB,UAA/B;AACA,YAAI,SAAS,KAAK,UAAlB;AACA,eAAO,WAAP,CAAmB,IAAnB;AACA;AACH,KALD;;AAOA;AACA,QAAM,8BAA8B,SAA9B,2BAA8B,GAAK;AACtC,YAAG,SAAS,iBAAT,GAA6B,CAAhC,EAAkC;AAC9B,sCAA0B,QAA1B;AACH,SAFD,MAEM,IAAG,kBAAkB,iBAAlB,GAAsC,CAAzC,EAA2C;AAC7C,sCAA0B,iBAA1B;AACH;AACH,KAND;;AAQA;AACA,QAAM,gBAAgB,SAAhB,aAAgB,IAAK;AACvB,YAAI,OAAO,EAAE,MAAF,CAAS,UAAT,CAAoB,UAA/B;AACA,YAAI,SAAS,KAAK,UAAlB;AACA,aAAK,QAAL,CAAc,CAAd,EAAiB,WAAjB,sBAAgD,SAAhD;;AAEA,YAAG,OAAO,YAAP,CAAoB,IAApB,MAA8B,iBAAjC,EAAmD;AAC/C,0BAAc,YAAd,CAA2B,OAAO,WAAP,CAAmB,IAAnB,CAA3B,EAAqD,cAAc,UAAd,CAAyB,CAAzB,CAArD;AACA,4BAAgB,CAAhB;AACH,SAHD,MAGM;AACF,qBAAS,WAAT,CAAqB,IAArB;AACA,iBAAK,KAAL,CAAW,cAAX,GAA4B,EAA5B;AACA,+BAAmB,CAAnB;AACH;AACJ,KAbD;;AAeA;AACA,QAAM,qBAAqB,SAArB,kBAAqB,IAAK;AAC5B,YAAI,OAAO,EAAE,MAAF,CAAS,UAApB;AACA,YAAI,SAAS,KAAK,UAAlB;AACA,YAAM,cAAc,OAAO,QAAP,CAAgB,CAAhB,EAAmB,QAAnB,CAA4B,CAA5B,CAApB;AACA,oBAAY,KAAZ,CAAkB,OAAlB,GAA4B,cAA5B;AACH,KALD;;AAOA;AACA,QAAM,kBAAkB,SAAlB,eAAkB,IAAK;AACzB,YAAI,OAAO,EAAE,MAAF,CAAS,UAApB;AACA,YAAI,SAAS,KAAK,UAAlB;AACA,YAAM,cAAc,OAAO,QAAP,CAAgB,CAAhB,EAAmB,QAAnB,CAA4B,CAA5B,CAApB;AACA,oBAAY,KAAZ,CAAkB,OAAlB,GAA4B,MAA5B;AACH,KALD;;AAOA,QAAM,UAAU,mBAAM;AAClB,YAAM,OAAW,IAAI,IAAJ,EAAjB;AACA,YAAI,UAAW,KAAK,YAAL,EAAf;AACA,eAAO,OAAP;AACH,KAJD;;AAOA;AACA,QAAI,UAAU,SAAV,OAAU,CAAC,IAAD,EAAO,OAAP,EAAkB;;AAE5B;AACA,YAAM,OAAO,SAAS,aAAT,CAAuB,IAAvB,CAAb;AACA,aAAK,YAAL,CAAkB,OAAlB,EAA0B,MAA1B;;AAEA;AACA,YAAM,SAAS,SAAS,aAAT,CAAuB,GAAvB,CAAf;AACA,YAAM,WAAY,SAAS,cAAT,CAAwB,IAAxB,CAAlB;AACA,eAAO,WAAP,CAAmB,QAAnB;AACA,aAAK,WAAL,CAAiB,MAAjB;;AAEA;AACA,YAAM,WAAW,SAAS,aAAT,CAAuB,MAAvB,CAAjB;AACA,YAAM,WAAW,SAAS,cAAT,CAAwB,iBAAgB,SAAhB,IAA6B,OAArD,CAAjB;AACA,iBAAS,WAAT,CAAqB,QAArB;AACA,iBAAS,SAAT,GAAqB,UAArB;AACA,aAAK,WAAL,CAAiB,QAAjB;;AAEA;AACA,YAAM,aAAiB,SAAS,aAAT,CAAuB,KAAvB,CAAvB;AACA,mBAAW,SAAX,GAAuB,YAAvB;;AAEA;AACA,YAAM,cAAmB,SAAS,aAAT,CAAuB,QAAvB,CAAzB;AACA,YAAM,kBAAmB,SAAS,cAAT,CAAwB,GAAxB,CAAzB;AACA,oBAAY,SAAZ,CAAsB,GAAtB,CAA0B,KAA1B,EAAiC,UAAjC;AACA,oBAAY,YAAZ,CAAyB,IAAzB,EAA+B,aAA/B;AACA,oBAAY,WAAZ,CAAwB,eAAxB;AACA,mBAAW,WAAX,CAAuB,WAAvB;;AAEA;AACA,YAAM,YAAiB,SAAS,aAAT,CAAuB,QAAvB,CAAvB;AACA,YAAM,gBAAiB,SAAS,cAAT,CAAwB,GAAxB,CAAvB;AACA,kBAAU,SAAV,CAAoB,GAApB,CAAwB,KAAxB,EAA+B,YAA/B;AACA,kBAAU,YAAV,CAAuB,IAAvB,EAA6B,WAA7B;AACA,kBAAU,WAAV,CAAsB,aAAtB;AACA,mBAAW,WAAX,CAAuB,SAAvB;;AAEA;AACA,YAAM,cAAc,SAAS,aAAT,CAAuB,QAAvB,CAApB;AACA,YAAM,kBAAkB,SAAS,cAAT,CAAwB,GAAxB,CAAxB;AACA,oBAAY,SAAZ,CAAsB,GAAtB,CAA0B,KAA1B,EAAiC,aAAjC;AACA,oBAAY,YAAZ,CAAyB,IAAzB,EAA+B,aAA/B;AACA,oBAAY,WAAZ,CAAwB,eAAxB;AACA,mBAAW,WAAX,CAAuB,WAAvB;;AAEA;AACA,aAAK,WAAL,CAAiB,UAAjB;;AAEA;AACA,iBAAS,YAAT,CAAsB,IAAtB,EAA2B,SAAS,UAAT,CAAoB,CAApB,CAA3B;;AAEA;AACA,oBAAY,gBAAZ,CAA6B,OAA7B,EAAsC,kBAAtC;;AAEA;AACA,kBAAU,gBAAV,CAA2B,OAA3B,EAAoC,UAApC;;AAEA;AACA,oBAAY,gBAAZ,CAA6B,OAA7B,EAAsC,aAAtC;;AAEA;AACA,YAAG,MAAM,KAAN,KAAgB,EAAnB,EAAsB;AAClB,oCAAwB,QAAxB;AACH;;AAED;AACA,cAAM,KAAN,GAAc,EAAd;AAEH,KAtED;;AAwEA;AACA;AACA,qBAAiB,gBAAjB,CAAkC,OAAlC,EAA0C,YAAI;AAC1C,YAAI,QAAQ,iBAAiB,KAA7B;AACA,YAAI,MAAM,IAAI,MAAJ,CAAW,KAAX,CAAV;;AAEA,YAAG,SAAS,iBAAT,GAA6B,CAAhC,EAAkC;AAC9B,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,iBAA7B,EAAgD,GAAhD,EAAqD;AACjD,oBAAI,aAAa,SAAS,QAAT,CAAkB,CAAlB,EAAqB,iBAArB,CAAuC,WAAvC,CAAmD,WAAnD,EAAjB;AACA,oBAAG,CAAC,WAAW,KAAX,CAAiB,GAAjB,CAAJ,EAA0B;AACtB,6BAAS,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAA2B,OAA3B,GAAoC,MAApC;AACH,iBAFD,MAEM;AACF,6BAAS,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAA2B,OAA3B,GAAoC,EAApC;AACH;AACJ;AACJ;;AAED,YAAG,kBAAkB,iBAAlB,GAAsC,CAAzC,EAA2C;AACvC,iBAAK,IAAI,KAAI,CAAb,EAAgB,KAAI,kBAAkB,iBAAtC,EAAyD,IAAzD,EAA8D;AAC1D,oBAAI,cAAa,kBAAkB,QAAlB,CAA2B,EAA3B,EAA8B,iBAA9B,CAAgD,WAAhD,CAA4D,WAA5D,EAAjB;AACA,oBAAG,CAAC,YAAW,KAAX,CAAiB,GAAjB,CAAJ,EAA0B;AACtB,sCAAkB,QAAlB,CAA2B,EAA3B,EAA8B,KAA9B,CAAoC,OAApC,GAA6C,MAA7C;AACH,iBAFD,MAEM;AACF,sCAAkB,QAAlB,CAA2B,EAA3B,EAA8B,KAA9B,CAAoC,OAApC,GAA6C,EAA7C;AACH;AACJ;AACJ;AACJ,KAzBD;;AA2BA;AACA;AACA;AACA,KAAC,SAAS,eAAT,GAA0B;AACvB,YAAG,aAAa,MAAb,GAAsB,CAAzB,EAA2B;;AAEvB,gBAAI,UAAU,KAAK,KAAL,CAAW,aAAa,OAAb,CAAqB,OAArB,CAAX,CAAd;;AAEA,gBAAI,gBAAgB,QAAQ,MAA5B;AACA,iBAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,aAAnB,EAAkC,GAAlC,EAAsC;AAClC,wBAAQ,QAAQ,CAAR,EAAW,IAAnB,EAAyB,QAAQ,CAAR,EAAW,OAApC;AACH;AACJ;AACJ,KAVD;;AAYA;AACA;AACA,aAAS,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,EAAmC;AAC/B,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,OAAL,GAAe,IAAf;AACH;;AAED;AACA,QAAI,0BAA0B,SAA1B,uBAA0B,CAAC,IAAD,EAAU;AACpC,YAAG,KAAK,iBAAL,GAAyB,CAA5B,EAA8B;AAC1B,gBAAI,YAAY,SAAS,gBAAT,CAA0B,aAA1B,CAAhB;;AAEA,gBAAI,UAAU,EAAd;;AAEA,iBAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,UAAU,MAA7B,EAAqC,GAArC,EAA0C;AACtC,oBAAI,YAAY,UAAU,CAAV,EAAa,UAAb,CAAwB,CAAxB,EAA2B,WAA3C;AACA,oBAAI,OAAO,UAAU,CAAV,EAAa,UAAb,CAAwB,CAAxB,EAA2B,WAAtC;;AAEA,oBAAI,UAAU,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,IAA9B,CAAd;AACA,wBAAQ,IAAR,CAAa,OAAb;AACH;;AAED,yBAAa,OAAb,CAAqB,OAArB,EAA6B,KAAK,SAAL,CAAe,OAAf,CAA7B;AACH;AACJ,KAhBD;AAkBH,CA5TD","file":"app-compiled.js","sourcesContent":["\n// create a priority tasks list which will push items in it by clicking on i.e. a Star-icon.\n// when user clicks on priority icons and if item is already marked as priority, the priority class and attributes should be removed.\n// create a function so items in the completed list can be pushed back to the tasksList (i.e when user accidentally click complete button).\n// line-through the completedTasks text (text-decoration prop CSS).\n// Add item to task list by pressing enterKey.\n// View option to only see the priority items.\n// Empty input form after items has been added.\n// Display date when task was send to completed list.\n// integrate search method to search for specific items\n// Search should ignore case-sensitivity\n\n//TODO button the Clear all tasks. The user should confirm this action before the program runs the function.\n//TODO Integrate Web Storage API to save data in the browser.\n//TODO Replace icons using font awesome icons.\n//TODO Users should be able to sort tasks alphabetically\n//TODO Users should be able to sort tasks by date\n\n\n$(()=>{\n\n    // Saving the DOM elements in a variables\n    let addBtn =  document.getElementById(\"addBtn\");\n    let itemList = document.getElementById(\"listUl\");\n    let completedItemList = document.getElementById(\"completedListUl\");\n    let input = document.getElementById(\"userInput\");\n    let completedList = document.getElementById(\"completedListUl\");\n    const priorityListBtn = document.getElementById(\"priorityListBtn\");\n    let searchFieldInput = document.getElementById(\"searchInputField\");\n\n\n    // Click event listener that will get the value from the input form,\n    // check if it is not empty, call the addItem function passing the input value as an argument.\n    addBtn.addEventListener(\"click\", () => {\n        let text = input.value;\n        text ? addItem(text) : console.log(\"No user input\");\n\n    });\n\n    // Event listener that will get the value from the input form when the enterKey is pressed,\n    // check if it is not empty, call the addItem function passing the input value as an argument.\n    input.addEventListener(\"keyup\", e =>{\n        if(e.keyCode === 13){\n            let text = input.value;\n            text ? addItem(text, getDate()) : console.log(\"No user input\");\n\n        }\n    });\n\n    // This function will check if item has the data-level attr. If true, it will be removed and invoke hidePriorityViewToggleBtn.\n    // If false, priorityItem function will be invoked\n    const checkPriorityLevel = e =>{\n        let item   = e.target.parentNode.parentNode;\n        if(item.getAttribute(\"data-level\")){\n            item.removeAttribute(\"data-level\");\n            item.classList.remove(\"priority-item\");\n            hidePriorityViewToggleBtn(itemList);\n        }else {\n            priorityItem(item);\n        }\n    };\n\n    // This function will apply data attr value of priority to the item and move the item to the\n    // top off the list mark it as a priority by applying specific CSS styles and invoke showPriorityViewToggleBtn.\n    const priorityItem = item => {\n        item.setAttribute(\"data-level\",\"priority\");\n        item.classList.add(\"priority-item\");\n        let parent = item.parentNode;\n        item.parentNode.insertBefore(item,parent.childNodes[0]);\n        showPriorityViewToggleBtn();\n    };\n\n    // This function will show the priority button that will change view to only show task labeled\n    // as priority (if there is 1 or more task with priority label).\n    const showPriorityViewToggleBtn = () => {\n        for(let i = 0 ; i < itemList.children.length; i++) {\n            if(itemList.children[i].getAttribute(\"data-level\") === \"priority\"){\n                priorityListBtn.style.display = \"inline-block\";\n            }\n        }\n        // Add event listener to the priorityListBtn so showPriorityLabeledItems function can be invoked if button is clicked.\n        priorityListBtn.addEventListener(\"click\",showPriorityLabeledItems);\n    };\n\n    // This function shows only the task in the tasksList that has been labeled as priority task (hiding non-priority tasks);\n    const showPriorityLabeledItems = () => {\n        for(let i = 0 ; i < itemList.children.length; i++) {\n            if(itemList.children[i].getAttribute(\"data-level\") === null) {\n                itemList.children[i].style.display = \"none\";\n            }\n        }\n\n        // Changes the text of the button when in priority view.\n        priorityListBtn.textContent = \"View All\";\n\n        // Add event listener to the priorityListBtn so showAlltems function can be invoked if button is clicked.\n        priorityListBtn.addEventListener(\"click\",showAllItems);\n    };\n\n    // This function will display all items in the task list if the recent view was to view to only show tasks labeled as priority\n    const showAllItems = () => {\n        for(let i = 0 ; i < itemList.children.length; i++) {\n            if(itemList.children[i].getAttribute(\"data-level\") === null) {\n                itemList.children[i].style.display = \"\";\n            }\n        }\n        // Changes the text of the button when all tasks are displayed.\n        priorityListBtn.textContent = \"Priorities\";\n\n        // Remove the event listener from the button\n        priorityListBtn.removeEventListener(\"click\",showAllItems);\n\n        // Adds event listener back to the PriorityList button which completes the Toggle function of the button.\n        priorityListBtn.addEventListener(\"click\",showPriorityLabeledItems);\n    };\n\n    // This function will hide the priority button that will change view to only show task labeled as priority. (if there is NO task with priority label).\n    const hidePriorityViewToggleBtn = (list) => {\n\n        // counter keeping track of how many items in the list have the data-level attribute\n        let count = 0;\n\n        for(let i = 0 ; i < list.children.length; i++) {\n            if(list.children[i].getAttribute(\"data-level\") !== null){\n                count++;\n                priorityListBtn.style.display = \"inline-block\";\n            }else {\n                if(count > 0) {\n                    priorityListBtn.style.display = \"inline-block\";\n                }else {\n                    priorityListBtn.style.display = \"none\";\n                }\n            }\n        }\n    };\n\n    // Function that will delete the list item form the items list and invoke function checkForPriorityLabeledTask\n    const deleteItem = e => {\n        let item = e.target.parentNode.parentNode;\n        let parent = item.parentNode;\n        parent.removeChild(item);\n        checkForPriorityLabeledTask();\n    };\n\n    // Function that will invoked the hidePriorityViewToggleBtn function if one of the lists is > 0 (items);\n    const checkForPriorityLabeledTask = () =>{\n       if(itemList.childElementCount > 0){\n           hidePriorityViewToggleBtn(itemList);\n       }else if(completedItemList.childElementCount > 0){\n           hidePriorityViewToggleBtn(completedItemList);\n       }\n    };\n\n    // Function that will remove item form the items list and put it on the completed tasks list and invoke hidePriorityBtn function.\n    const completedItem = e => {\n        let item = e.target.parentNode.parentNode;\n        let parent = item.parentNode;\n        item.children[1].textContent = `Completed on: ${getDate()}`;\n\n        if(parent.getAttribute(\"id\") !== \"completedListUl\"){\n            completedList.insertBefore(parent.removeChild(item), completedList.childNodes[0]);\n            hidePriorityBtn(e);\n        }else {\n            itemList.appendChild(item);\n            item.style.textDecoration = \"\";\n            displayPriorityBtn(e)\n        }\n    };\n\n    // Function will display the priority button when item is moved back from \"completed task list\" to the \"still to do\" task list.\n    const displayPriorityBtn = e => {\n        let item = e.target.parentNode;\n        let parent = item.parentNode;\n        const priorityBtn = parent.children[2].children[0];\n        priorityBtn.style.display = \"inline-block\";\n    };\n\n    // Function will hide the priority button when item is moved to the completed tasks list.\n    const hidePriorityBtn = e => {\n        let item = e.target.parentNode;\n        let parent = item.parentNode;\n        const priorityBtn = parent.children[2].children[0];\n        priorityBtn.style.display = \"none\";\n    };\n\n    const getDate = () => {\n        const date     = new Date();\n        let getDate  = date.toDateString();\n        return getDate;\n    };\n\n\n    // Function that will add items to the list. The parameter passed to the function is received from the addBtn event listener.\n    let addItem = (text ,spanTag) =>{\n\n        // Creates an li element and set the id attribute\n        const item = document.createElement(\"li\");\n        item.setAttribute(\"class\",\"item\");\n\n        // Creates a pElement, appends the text (value) to the pElement and then appends the pElement to the li element.\n        const textEl = document.createElement(\"p\");\n        const textNode =  document.createTextNode(text);\n        textEl.appendChild(textNode);\n        item.appendChild(textEl);\n\n        // Creates the Date indicator and appends it to the li element.\n        const dateSpan = document.createElement(\"span\");\n        const dateNode = document.createTextNode(\"Created on: \"+ getDate() || spanTag);\n        dateSpan.appendChild(dateNode);\n        dateSpan.className = \"dateSpan\";\n        item.appendChild(dateSpan);\n\n        // Creates a Div element for the remove and complete buttons for every item in the list\n        const buttonsDiv     = document.createElement(\"div\");\n        buttonsDiv.className = \"buttonsDiv\";\n\n        // Creates the priority button so priority tasks can be moved to top of the list\n        const priorityBtn      = document.createElement(\"button\");\n        const priorityBtnNode  = document.createTextNode(\"*\");\n        priorityBtn.classList.add(\"btn\", \"btn-info\");\n        priorityBtn.setAttribute(\"id\", \"priorityBtn\");\n        priorityBtn.appendChild(priorityBtnNode);\n        buttonsDiv.appendChild(priorityBtn);\n\n        // Creates the remove button to remove items from the list and append it as an child to the buttonDiv element.\n        const removeBtn      = document.createElement(\"button\");\n        const removeBtnNode  = document.createTextNode(\"X\");\n        removeBtn.classList.add(\"btn\", \"btn-danger\");\n        removeBtn.setAttribute(\"id\", \"removeBtn\");\n        removeBtn.appendChild(removeBtnNode);\n        buttonsDiv.appendChild(removeBtn);\n\n        // Creates the complete button to add completed items to the completed tasks list and append it as an child to the buttonDiv element.\n        const completeBtn = document.createElement(\"button\");\n        const completeBtnNode = document.createTextNode(\"√\");\n        completeBtn.classList.add(\"btn\", \"btn-success\");\n        completeBtn.setAttribute(\"id\", \"completeBtn\");\n        completeBtn.appendChild(completeBtnNode);\n        buttonsDiv.appendChild(completeBtn);\n\n        // Appends the buttonDiv element to the li element.\n        item.appendChild(buttonsDiv);\n\n        // Insert the li element into the DOM ul element with and id of #listUl.\n        itemList.insertBefore(item,itemList.childNodes[0]);\n\n        // Adds an click event listener to the priority button to move items marked as priority to the top of the list.\n        priorityBtn.addEventListener(\"click\", checkPriorityLevel);\n\n        // Adds an click event listener to the remove button to remove the item from the list.\n        removeBtn.addEventListener(\"click\", deleteItem);\n\n        // Adds an click event listener to the remove button to remove the item from the list.\n        completeBtn.addEventListener(\"click\", completedItem);\n\n        // Checks if input value and if true, invokes storeItemInLocal.\n        if(input.value !== \"\"){\n            storeItemInLocalStorage(itemList);\n        }\n\n        // Clears the input field after task is added to the list\n        input.value = \"\";\n\n    };\n\n    // Checks if the textContent of the list item has characters matching value that the user inserted in the search field.\n    // if value matches, it will show only those items matching the search value and hides the rest of the items\n    searchFieldInput.addEventListener(\"keyup\",()=>{\n        let value = searchFieldInput.value;\n        let pat = new RegExp(value);\n\n        if(itemList.childElementCount > 0){\n            for( let i = 0; i < itemList.childElementCount; i++) {\n                let getContent = itemList.children[i].firstElementChild.textContent.toLowerCase();\n                if(!getContent.match(pat)){\n                    itemList.children[i].style.display =\"none\";\n                }else {\n                    itemList.children[i].style.display =\"\";\n                }\n            }\n        }\n\n        if(completedItemList.childElementCount > 0){\n            for( let i = 0; i < completedItemList.childElementCount; i++) {\n                let getContent = completedItemList.children[i].firstElementChild.textContent.toLowerCase();\n                if(!getContent.match(pat)){\n                    completedItemList.children[i].style.display =\"none\";\n                }else {\n                    completedItemList.children[i].style.display =\"\";\n                }\n            }\n        }\n    });\n\n    // This IIFE will check if there is any tasks stored in the LocalStorage object.\n    // If true, it will parse the localStorage object, retrieve the values(tasks) and then invoke the addItems\n    // function to render the tasks in the document(DOM).\n    (function getStorageItems(){\n        if(localStorage.length > 0){\n\n            let storage = JSON.parse(localStorage.getItem(\"tasks\"));\n\n            let storageLength = storage.length;\n            for(let i = 0; i < storageLength; i++){\n                addItem(storage[i].pTag, storage[i].spanTag);\n            }\n        }\n    })();\n\n    // Object constructor template that converts each task in the list in an object.\n    // This function will be invoked in the storeItemInLocaleStorage to store the tasks list.\n    function CreateTasksObj(pTag, span){\n        this.pTag = pTag;\n        this.spanTag = span;\n    }\n\n    // Function that will stringify the tasks to store them in the browsers localStorage object using the Web Storage API.\n    let storeItemInLocalStorage = (list) => {\n        if(list.childElementCount > 0){\n            let listItems = document.querySelectorAll(\" #listUl li\");\n\n            let taskArr = [];\n\n            for(let i = 0; i < listItems.length; i++) {\n                let paragraph = listItems[i].childNodes[0].textContent;\n                let span = listItems[i].childNodes[1].textContent;\n\n                let taskObj = new CreateTasksObj(paragraph, span);\n                taskArr.push(taskObj);\n            }\n\n            localStorage.setItem(\"tasks\",JSON.stringify(taskArr));\n        }\n    }\n\n});\n\n"]}