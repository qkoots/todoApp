{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["\n// create a priority tasks list which will push items in it by clicking on i.e. a Star-icon.\n// when user clicks on priority icons and if item is already marked as priority, the priority class and attributes should be removed.\n// create a function so items in the completed list can be pushed back to the tasksList (i.e when user accidentally click complete button).\n// line-through the completedTasks text (text-decoration prop CSS).\n// Add item to task list by pressing enterKey.\n// View option to only see the priority items.\n// Empty input form after items has been added.\n// Display date when task was send to completed list.\n// integrate search method to search for specific items.\n// Search should ignore case-sensitivity.\n// Integrate Web Storage API to save data in the Storage object(localStorage).\n//Task in LocalStorage that has the data-attr = priority, should render as priority task when page is refresh/reload/visited again.\n\n//TODO Task in LocalStorage that has already been completed should be rendered in the completedTasksList when page is refresh/reload/visited again.\n//TODO button the Clear all tasks. The user should confirm this action before the program runs the function.\n//TODO Replace icons using font awesome icons.\n//TODO Users should be able to sort tasks alphabetically\n//TODO Users should be able to sort tasks by date\n\n\n$(()=>{\n\n    // Saving the DOM elements in a variables\n    let addBtn =  document.getElementById(\"addBtn\");\n    let todoListUl = document.getElementById(\"todolistUl\");\n    let completedItemList = document.getElementById(\"completedListUl\");\n    let input = document.getElementById(\"userInput\");\n    const priorityListBtn = document.getElementById(\"priorityListBtn\");\n    let searchFieldInput = document.getElementById(\"searchInputField\");\n\n    // Click event listener that will get the value from the input form,\n    // check if it is not empty, call the addItem function passing the input value as an argument.\n    addBtn.addEventListener(\"click\", () => {\n        let text = input.value;\n        text ? addItem(text) : console.log(\"No user input\");\n    });\n\n    // Event listener that will get the value from the input form when the enterKey is pressed,\n    // check if it is not empty, call the addItem function passing the input value as an argument.\n    input.addEventListener(\"keyup\", e => {\n        if(e.keyCode === 13){\n            let text = input.value;\n            text ? addItem(text, getDate()) : console.log(\"No user input\");\n        }\n    });\n\n    // This function will check if item has the data-level attr when a user triggers the event(priorityBtn).\n    // If true, it will be removed and invoke hidePriorityViewToggleBtn.\n    // If false, priorityItem function will be invoked\n    const checkPriorityLevel = e => {\n        let item = e.target.parentNode.parentNode;\n        if(item.getAttribute(\"data-level\")){\n            item.removeAttribute(\"data-level\");\n            item.classList.remove(\"priority-item\");\n            hidePriorityViewToggleBtn(todoListUl);\n            prepToStore(todoListUl, completedItemList)\n        }else {\n            priorityItem(item);\n        }\n    };\n\n    // This function will apply data attr value of priority to the task and moves it\n    // top off the todolist. Then applies specific CSS styles for task labeled as priority and invoke showPriorityViewToggleBtn.\n    const priorityItem = item => {\n        item.setAttribute(\"data-level\",\"priority\");\n        item.classList.add(\"priority-item\");\n        let parent = item.parentNode;\n        item.parentNode.insertBefore(item,parent.childNodes[0]);\n        showPriorityViewToggleBtn();\n        prepToStore(todoListUl,completedItemList);\n    };\n\n    // This function will show the priority button that will change view to only show tasks labeled\n    // as priority (if there is 1 or more task with labeled as priority).\n    const showPriorityViewToggleBtn = () => {\n        for(let i = 0 ; i < todoListUl.children.length; i++) {\n            if(todoListUl.children[i].getAttribute(\"data-level\") === \"priority\"){\n                priorityListBtn.style.display = \"inline-block\";\n            }\n        }\n        // Add event listener to the priorityListBtn so showPriorityLabeledItems function can be invoked if button is clicked.\n        priorityListBtn.addEventListener(\"click\",showPriorityLabeledItems);\n    };\n\n    // This function shows only the task in the todoList that has been labeled as priority(hiding non-priority tasks).\n    const showPriorityLabeledItems = () => {\n        for(let i = 0 ; i < todoListUl.children.length; i++) {\n            if(todoListUl.children[i].getAttribute(\"data-level\") === null) {\n                todoListUl.children[i].style.display = \"none\";\n            }\n        }\n\n        // Changes the text of the button when in priority view.\n        priorityListBtn.textContent = \"View All\";\n\n        // Add event listener to the priorityListBtn so showAlltems function can be invoked if button is clicked.\n        priorityListBtn.addEventListener(\"click\",showAllItems);\n    };\n\n    // This function will display all task in the todolist if the recent view was to only show tasks labeled as priority.\n    const showAllItems = () => {\n        for(let i = 0 ; i < todoListUl.children.length; i++) {\n            if(todoListUl.children[i].getAttribute(\"data-level\") === null) {\n                todoListUl.children[i].style.display = \"\";\n            }\n        }\n        // Changes the text of the button when all tasks are displayed.\n        priorityListBtn.textContent = \"Priorities\";\n\n        // Remove the event listener from the button\n        priorityListBtn.removeEventListener(\"click\",showAllItems);\n\n        // Adds event listener back to the PriorityList button which completes the Toggle function of the button.\n        priorityListBtn.addEventListener(\"click\",showPriorityLabeledItems);\n    };\n\n    // This function will hide the priority button that will show only tasks labeled as priority. (if there is NO task with priority label).\n    const hidePriorityViewToggleBtn = (list) => {\n\n        // counter keeping track of how many task in the list have the data-level attribute.\n        let count = 0;\n\n        for(let i = 0 ; i < list.children.length; i++) {\n            if(list.children[i].getAttribute(\"data-level\") !== null){\n                count++;\n                priorityListBtn.style.display = \"inline-block\";\n            }else {\n                if(count > 0) {\n                    priorityListBtn.style.display = \"inline-block\";\n                }else {\n                    priorityListBtn.style.display = \"none\";\n                }\n            }\n        }\n    };\n\n    // Function that will delete the task from the todolist/completedList and invoke function checkForPriorityLabeledTask\n    const deleteItem = e => {\n        let item = e.target.parentNode.parentNode;\n        let parent = item.parentNode;\n        parent.removeChild(item);\n        checkForPriorityLabeledTask();\n        prepToStore(todoListUl, completedItemList);\n\n    };\n\n    // Function that will invoked the hidePriorityViewToggleBtn function if the todolist > 0 ;\n    const checkForPriorityLabeledTask = () =>{\n       if(todoListUl.childElementCount > 0){\n           hidePriorityViewToggleBtn(todoListUl);\n       }else if(completedItemList.childElementCount > 0){\n           hidePriorityViewToggleBtn(completedItemList);\n       }\n    };\n\n    // Function that will remove task from the todolist and moves it to the completedtaskList and invoke hidePriorityBtn function.\n    const completedItem = e => {\n        let item = e.target.parentNode.parentNode;\n        let parent = item.parentNode;\n        item.children[1].textContent = `Completed on: ${getDate()}`;\n        item.classList.add(\"complete\");\n\n        if(parent.getAttribute(\"id\") !== \"completedListUl\"){\n            completedItemList.insertBefore(parent.removeChild(item), completedItemList.childNodes[0]);\n            hidePriorityBtn(e);\n\n        }else {\n            todoListUl.appendChild(item);\n            item.style.textDecoration = \"\";\n            displayPriorityBtn(e);\n            item.classList.remove(\"complete\");\n        }\n    };\n\n    // Function will display the priority button when task is moved back from \"completedtaskList\" to the todolist.\n    const displayPriorityBtn = e => {\n        let item = e.target.parentNode;\n        let parent = item.parentNode;\n        const priorityBtn = parent.children[2].children[0];\n        priorityBtn.style.display = \"inline-block\";\n    };\n\n    // Function will hide the priority button when task is moved to the completedtasklist.\n    const hidePriorityBtn = e => {\n        let item = e.target.parentNode;\n        let parent = item.parentNode;\n        const priorityBtn = parent.children[2].children[0];\n        priorityBtn.style.display = \"none\";\n    };\n\n    // Function that gets the current date.\n    const getDate = () => {\n        const date     = new Date();\n        let getDate  = date.toDateString();\n        return getDate;\n    };\n\n    // Function that will add task to the todolist. The parameter passed to the function is received from the addBtn eventlistener\n    // or from the getStorageItem IIFE.\n    let addItem = (text ,spanTag, dataAttr) =>{\n\n        // Creates an li element and set the id attribute\n        const item = document.createElement(\"li\");\n        item.setAttribute(\"class\",\"item\");\n\n        // Creates a pElement, appends the text (value) to the pElement and then appends the pElement to the li element.\n        const textEl = document.createElement(\"p\");\n        const textNode =  document.createTextNode(text);\n        textEl.appendChild(textNode);\n        item.appendChild(textEl);\n\n        // Creates the Date indicator and appends it to the li element.\n        const dateSpan = document.createElement(\"span\");\n        const dateNode = document.createTextNode(\"Created on: \"+ getDate() || spanTag);\n        dateSpan.appendChild(dateNode);\n        dateSpan.className = \"dateSpan\";\n        item.appendChild(dateSpan);\n\n        // Creates a Div element for the remove and complete buttons for every task in the todolist.\n        const buttonsDiv     = document.createElement(\"div\");\n        buttonsDiv.className = \"buttonsDiv\";\n\n        // Creates the priority button so tasks can be labeled as priority. Button will be appended as a child to the buttonDiv element.\n        const priorityBtn      = document.createElement(\"button\");\n        const priorityBtnNode  = document.createTextNode(\"*\");\n        priorityBtn.classList.add(\"btn\", \"btn-info\");\n        priorityBtn.setAttribute(\"id\", \"priorityBtn\");\n        priorityBtn.appendChild(priorityBtnNode);\n        buttonsDiv.appendChild(priorityBtn);\n\n        // Creates the remove button to remove tasks from the todolist. Button will be appended as a child to the buttonDiv element.\n        const removeBtn      = document.createElement(\"button\");\n        const removeBtnNode  = document.createTextNode(\"X\");\n        removeBtn.classList.add(\"btn\", \"btn-danger\");\n        removeBtn.setAttribute(\"id\", \"removeBtn\");\n        removeBtn.appendChild(removeBtnNode);\n        buttonsDiv.appendChild(removeBtn);\n\n        // Creates the complete button to mark task as completed. Button will be appended as a child to the buttonDiv element.\n        const completeBtn = document.createElement(\"button\");\n        const completeBtnNode = document.createTextNode(\"√\");\n        completeBtn.classList.add(\"btn\", \"btn-success\");\n        completeBtn.setAttribute(\"id\", \"completeBtn\");\n        completeBtn.appendChild(completeBtnNode);\n        buttonsDiv.appendChild(completeBtn);\n\n        // Appends the buttonDiv element to the li element.\n        item.appendChild(buttonsDiv);\n\n        // Insert the li element into the DOM ul element with id of #todolistUl.\n        todoListUl.insertBefore(item,todoListUl.childNodes[0]);\n\n        // Adds an click event listener to the priority button.\n        priorityBtn.addEventListener(\"click\", checkPriorityLevel);\n\n        // Adds an click event listener to the remove button.\n        removeBtn.addEventListener(\"click\", deleteItem);\n\n        // Adds an click event listener to the complete button.\n        completeBtn.addEventListener(\"click\", completedItem);\n\n        // Checks if input value and if true, invokes prepToStore function.\n        if(input.value !== \"\"){\n            prepToStore(todoListUl, completedItemList);\n        }\n\n        // This if statement only executes when the IIFE (getStorageItems) runs and return the task(s) stored in the localStorage\n        if(dataAttr == \"priority\"){\n            item.setAttribute(\"data-level\",\"priority\");\n            item.classList.add(\"priority-item\");\n            showPriorityViewToggleBtn();\n        }\n\n        // Clears the input field after task is added to the list\n        input.value = \"\";\n    };\n\n    // Object constructor template that converts each task in the list(s) in an object.\n    // This function will be invoked in the loopTaskListsAndStore function to store the list.\n    function CreateTasksObj(pTag, span, priorityLevel){\n        this.pTag = pTag;\n        this.spanTag = span;\n        this.priority = priorityLevel;\n\n    }\n\n    // This function gets the child elements of both the todolistUL and the completedlistUl and calls the loopTasksLists function\n    // whenever one ot them is >= 0.\n    let prepToStore = (tasksList, completedTasksList) => {\n        let listItems = document.querySelectorAll(\"#todolistUl li\");\n        let completedlistItems = document.querySelectorAll(\"#completedListUl li\");\n\n        if(tasksList.childElementCount >= 0){\n            loopTaskListsAndStore(listItems, tasksList);\n        } else if(completedTasksList.childElementCount >= 0){\n            loopTaskListsAndStore(completedlistItems,completedTasksList);\n        }\n    };\n\n    // This function loops the todolist and creates an object of each child element(task), stringify them and store\n    // them in the browsers localStorage object using the Web Storage API.\n    let loopTaskListsAndStore = (listItems, taskList) => {\n        let taskArr = [];\n        let paragraph, span, priorityLevel;\n\n        for(let i = 0; i < listItems.length; i++) {\n            paragraph = listItems[i].childNodes[0].textContent;\n            span = listItems[i].childNodes[1].textContent;\n            priorityLevel = taskList.children[i].getAttribute(\"data-level\");\n            let taskObj = new CreateTasksObj(paragraph, span, priorityLevel );\n            taskArr.push(taskObj);\n        }\n        localStorage.setItem(\"tasks\",JSON.stringify(taskArr));\n        console.log(localStorage);\n    };\n\n    // This IIFE will check if there is any tasks stored in the LocalStorage object.\n    // If true, it will parse the localStorage object, retrieve the values(tasks) and then invoke the addItems\n    // function to render the tasks in the document(DOM).\n    (function getStorageItems(){\n        console.log(localStorage);\n\n        if(localStorage.length > 0){\n            let storage = JSON.parse(localStorage.getItem(\"tasks\"));\n            let storageLength = storage.length;\n\n            for(let i = 0; i < storageLength; i++){\n                addItem(storage[i].pTag, storage[i].spanTag, storage[i].priority, storage[i].class);\n            }\n        }\n    })();\n\n    // Event listener for searching specific tasks in the todolist and the completedtaskList\n    searchFieldInput.addEventListener(\"keyup\",()=>{\n        searchTask(todoListUl);\n        searchTask(completedItemList);\n    });\n\n    // Checks if the textContent of the tasks has characters matching value that the user inserted in the search field.\n    // if value matches, it will show only the task(s) matching the search value and hides the rest of the tasks.\n    let searchTask = (list) => {\n        let value = searchFieldInput.value;\n        let pat = new RegExp(value);\n\n        if(list.childElementCount > 0){\n            for( let i = 0; i < list.childElementCount; i++) {\n                let getContent = list.children[i].firstElementChild.textContent.toLowerCase();\n                if(!getContent.match(pat)){\n                    list.children[i].style.display =\"none\";\n                }else {\n                    list.children[i].style.display =\"\";\n                }\n            }\n        }\n    };\n\n});\n\n"]}