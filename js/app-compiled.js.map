{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["//TODO create a priority tasks list which will push items in it by clicking on i.e. a Star-icon.\n//TODO when user clicks on priority icons and if item is already marked as priority, the priority class and attributes should be removed.\n//TODO create a function so items in the completed list can be pushed back to the todoListUl (i.e when user accidentally click complete button).\n//TODO line-through the completedTasks text (text-decoration prop CSS).\n//TODO Add item to task list by pressing enterKey.\n//TODO View option to only see the priority items.\n//TODO Empty input form after items has been added.\n//TODO integrate search method to search for specific items.\n//TODO Search should ignore case-sensitivity.\n//TODO Integrate Web Storage API to save data in the Storage object(localStorage).\n//TODO Task in LocalStorage that has the data-attr = priority, should render as priority task when page is refresh/reload/visited again.\n//TODO Task in LocalStorage that has already been completed should be rendered in the completedListUl when page is refresh/reload/visited again.\n//TODO The priorityBtn of tasks in completedListUl should not be displayed when page is refresh/reloaded.\n//TODO Program should save the specific date a task was created.\n//TODO Program should save the specific date a task was completed.\n//TODO Replace icons using font awesome icons.\n//TODO Users should be able to sort tasks alphabetically\n//TODO Users should be able to sort tasks by date\n\n\n// Construct the todoList object\nconst todoList = {\n\n    // Array of items\n    todos : [],\n\n    // Create method to add todoItems to the list\n    addTodo (todoTitle) {\n        this.todos.push({\n            todoTitle: todoTitle,\n            completed : false\n        });\n\n    },\n    // Create method to Change todoItems in the list\n    changeTodoTitle (position, newTodoTitle) {\n        this.todos[position].todoTitle = newTodoTitle;\n    },\n    // Create method to delete todoItems in the list\n    deletedTodo (position) {\n        this.todos.splice(position,1);\n    },\n    // Create method to mark todoItems as completed in the list\n    toggleCompleted (position) {\n        let todo = this.todos[position];\n        todo.completed = !todo.completed;\n    },\n    // Create method to toggle all todoItems in the list as completed or !completed\n    toggleAll () {\n        let totalTodos = this.todos.length;\n        let completedTodos = 0;\n\n        for(let i = 0; i < totalTodos; i++){\n            if(this.todos[i].completed === true){\n                completedTodos++\n            }\n        }\n        if(completedTodos === totalTodos){\n            for(let i = 0; i < totalTodos; i++){\n                this.todos[i].completed = false;\n            }\n        } else {\n            for(let i = 0; i < totalTodos; i++){\n                this.todos[i].completed = true;\n            }\n        }\n    }\n};\n\n// Handlers for the events the user triggers.\nconst handlers = {\n\n    addTodo() {\n        let addTodoInputValue = document.getElementById(\"addTodoValueInput\");\n        todoList.addTodo(addTodoInputValue.value);\n        addTodoInputValue.value = \"\";\n        view.displayTodos();\n    },\n\n    changeTodo() {\n        let changeTodoPositionInput = document.querySelector(\"#changeTodoPosition\");\n        let changeTodoValueInput = document.querySelector(\"#changeTodoTextInput\");\n        todoList.changeTodoTitle(changeTodoPositionInput.valueAsNumber,changeTodoValueInput.value);\n        changeTodoPositionInput.value = \"\";\n        changeTodoValueInput.value = \"\";\n        view.displayTodos();\n    },\n\n    deleteTodo(){\n        let deleteTodoPositionInput = document.querySelector(\"#deleteTodoPositionInput\");\n        todoList.deletedTodo(deleteTodoPositionInput.valueAsNumber);\n        deleteTodoPositionInput.value = \"\";\n        view.displayTodos();\n    },\n\n    toggleCompleted() {\n        let completedTodoPosition = document.querySelector(\"#completedTodoPosition\");\n        todoList.toggleCompleted(completedTodoPosition.valueAsNumber);\n        completedTodoPosition.value = \"\";\n        view.displayTodos();\n\n    },\n\n    toggleTodos() {\n        todoList.toggleAll();\n        view.displayTodos();\n    },\n};\n\nconst view = {\n\n    displayTodos() {\n        let todoUl = document.querySelector(\"ul\");\n        todoUl.innerHTML = \"\";\n\n        for (let i = 0; i < todoList.todos.length; i++) {\n            let todos = todoList.todos[i];\n            let todoLi = document.createElement(\"li\");\n            let todoWithCompletion = \"\";\n\n            if (todos.completed === true) {\n                todoWithCompletion = `(x)${todos.todoTitle}`;\n            } else {\n                todoWithCompletion = `( )${todos.todoTitle}`;\n            }\n\n            todoLi.textContent = todoWithCompletion;\n            todoUl.appendChild(todoLi);\n        }\n    }\n};"]}